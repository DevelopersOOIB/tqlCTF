#!/usr/bin/python3

from flask import Flask, render_template_string,render_template,url_for,flash,request,redirect,Response,session
import sqlite3
import os
import json

app = Flask(__name__)
app.secret_key = "monkeys"
app.debug = False


def create_database () :
    try :
        conn = sqlite3.connect('database.db')
        c = conn.cursor()
        c.execute('''CREATE TABLE users
                     (user_id INTEGER PRIMARY KEY AUTOINCREMENT, username TEXT, password TEXT, isAdmin BOOLEAN)''')
        users = [
            ('1','admin','my_darkest_days_come_undone',True),
            ('2','@collapsz','while_she_sleeps_the_guilty_party',True),
            ('3','t.me/fefuctf','bad_omens_the_death_of_piece_of_mind',True),
        ]
        c.executemany("INSERT INTO users (user_id, username, password, isAdmin) VALUES (?, ?, ?, ?)",users)
        conn.commit( )
        conn.close( )
        print( )
    except:
        return 'error'

DATABASE = '/app/database.db'

def get_db () :
    db = sqlite3.connect(DATABASE)
    db.row_factory = sqlite3.Row
    return db


def close_db (db) :
    if db is not None :
        db.close( )


@app.route('/',methods=['GET','POST'])
def main () :
    return redirect('/login')


@app.route('/login',methods=['GET','POST'])
def login () :
    db = get_db( )
    error = None
    if request.method == 'POST' :
        username = request.form.get('username')
        password = request.form.get('password')

        if not (username and password) :
            error = "Username and password are required!"
            return render_template('login.html',error=error)

        user = db.execute(
            'SELECT * FROM users WHERE username = ?',(username,)).fetchone( )

        if user and user ['password'] == password :
            rendered_username = render_template_string(f'{username}')
            session_data = {
                "username" : rendered_username,
                "isLoggedIn" : "true"
            }
            session ['user_data'] = json.dumps(session_data)
            return redirect('/home')
        else :
            error = 'Incorrect username or password.'

    return render_template('login.html',error=error)


@app.route('/register',methods=['GET','POST'])
def register () :
    db = get_db( )
    error = None
    if request.method == 'POST' :
        username = request.form.get('username')
        password = request.form.get('password')

        if not (username and password) :
            error = "Username and password are required!"
            return render_template('register.html',error=error)

        user = db.execute('SELECT * FROM users WHERE username = ?',(username,)).fetchone()

        if user :
            error = 'User with this username already exists.'
            return render_template('register.html',error=error)

        try :
            db.execute('INSERT INTO users (username, password, isAdmin) VALUES (?, ?, 0)',(username,password))
            db.commit()
            return redirect('/login')
        except Exception as e :
            error = "Error adding user: {}".format(e)
            return render_template('register.html',error=error)

    return render_template('register.html',error=error)


@app.route('/home')
def home () :
    user_data = json.loads(session.get('user_data','{}'))
    if user_data.get('isLoggedIn') :
        error = "Something went wrong..."
        return render_template('home.html',error=error)
    else :
        return "You are not authorized."


if __name__ == '__main__' :
    create_database( )
    app.run(debug=False,host='0.0.0.0',port=5555)
